.bit {
  display: none;
  position: absolute;
  -webkit-font-smoothing: antialiased;
}

.bit .container {
  display: inline-block;
  font-size: 1em;
}

.bit .content p { margin: 0; }

.bit .container .ui-widget-header {
  display: none;
  cursor: move;
  background-color: #ccc;
  position: absolute;
  top: -7px;
  left: 0;
  margin: 0;
  padding: 0;
}

.bit .container:hover .ui-widget-header {
  display: block;
  height: 8px;
  width: 100%;
}

.bit.image .container .face.front {
  padding: 0;
}

.bit.editing .container .face.front,
.bit.text .container .face.front {

  background-color: #fff;
  padding: 15px;
}

.bit.image .content .zoom a {
  cursor: default;
}

.blue {
  background: #f0f0fa !important;
  font-family: 'Merriweather Sans', sans-serif;
  font-weight: 800;
  text-transform: uppercase;
  font-size: 0.75em;
}

.bit img {
  width: 200px;
}

.bit.text {
  background-color: white;
  padding: 0.1em;
}

.create-parallel--origin {
  border: 0.4em solid yellow;
}


@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin prefix($map, $vendors: webkit moz ms o) {
  @each $prop, $value in $map {
    @if $vendors {
      @each $vendor in $vendors {
        #{"-" + $vendor + "-" + $prop}: #{$value};
      }
    }
    // Dump regular property anyway
    #{$prop}: #{$value};
  }
}

@include keyframes(passing-through) {

  0% {
    opacity: 0;
    @include prefix((transform: translateY(40px)));
  }

  30%, 70% {
    opacity: 1;
    @include prefix((transform: translateY(0px)));
  }

  100% {
    opacity: 0;
    @include prefix((transform: translateY(-40px)));
  }
}

@include keyframes(slide-in) {

  0% {
    opacity: 0;
    @include prefix((transform: translateY(40px)));
  }

  30% {
    opacity: 1;
    @include prefix((transform: translateY(0px)));
  }
}

@include keyframes(pulse) {

  0% { @include prefix((transform: scale(1))); }
  10% { @include prefix((transform: scale(1.1))); }
  20% { @include prefix((transform: scale(1))); }

}

.bit .content {
  &.success .success-mark {
    @include prefix((animation: passing-through 3s cubic-bezier(0.770, 0.000, 0.175, 1.000)));
  }
  &.error .error-mark {
    opacity: 1;
    @include prefix((animation: slide-in 3s cubic-bezier(0.770, 0.000, 0.175, 1.000)));
  }
  .success-mark, .error-mark {
    pointer-events: none;
    opacity: 0;
    z-index: 500;
    position: absolute;
    display: block;
    top: 50%;
    left: 50%;
    margin-left: -27px;
    margin-top: -27px;
  }
  .success-mark svg, .error-mark svg {
    display: block;
    width: 54px;
    height: 54px;
  }
  &.processing .progress {
    opacity: 1;
    @include prefix((transition: all 0.2s linear));
  }
  &.complete .progress {
    opacity: 0;
    @include prefix((transition: opacity 0.4s ease-in));
  }
  &:not(.processing) .progress {
    @include prefix((animation: pulse 6s ease infinite));
  }
  .progress {
    opacity: 1;
    z-index: 1000;
    pointer-events: none;
    position: absolute;
    height: 16px;
    left: 50%;
    top: 50%;
    margin-top: -8px;
    width: 80px;
    margin-left: -40px;
    background: rgba(255, 255, 255, 0.9);
    -webkit-transform: scale(1);
    border-radius: 8px;
    overflow: hidden;
    .upload {
      background: #333;
      background: linear-gradient(to bottom, #666, #444);
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 0;
      @include prefix((transition: width 300ms ease-in-out));
    }
  }
  &.error {
    .error-message {
      display: block;
    }
    &:hover .error-message {
      opacity: 1;
      pointer-events: auto;
    }
  }
  .error-message {
    text-align: center;
    pointer-events: none;
    z-index: 1000;
    position: absolute;
    display: none;
    opacity: 0;
    @include prefix((transition: opacity 0.3s ease));
    font-size: 13px;
    top: 100%;
    width: 100%;
    background: #be2626;
    background: linear-gradient(to bottom, #be2626, #a92222);
    padding: 0.5em 1.2em;
    color: white;
    &:after {
      content: '';
      position: absolute;
      top: -6px;
      left: 50%;
      width: 0;
      height: 0;
      border-left: 6px solid transparent;
      border-right: 6px solid transparent;
      border-bottom: 6px solid #be2626;
    }
  }
}



// via https://sunpig.com/martin/2010/02/10/marching-ants-in-css/
// https://sunpig.com/martin/code/2010/marchingants/marchingants.html
// .marching-ants-border {
//   -webkit-animation-name: march-up;
//   -webkit-animation-duration: 0.3s;
//   -webkit-animation-iteration-count: infinite;
//   -webkit-animation-timing-function: linear;
// }

// @-webkit-keyframes march-up {
//   from {
//     background-position-y: 8px;
//   }
//   to {
//     background-position-y: 0;
//   }
// }



